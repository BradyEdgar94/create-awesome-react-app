let arg,createTemplate,createCMS,promoptForMissingOptions,promoptForCMSConfiguration,promoptForMAMPUpdate;_3d7‍.x([["cli",()=>cli]]);_3d7‍.w("arg",[["default",["arg"],function(v){arg=v}]]);_3d7‍.w("./createTemplate",[["default",["createTemplate"],function(v){createTemplate=v}]]);_3d7‍.w("./createCMS",[["default",["createCMS"],function(v){createCMS=v}]]);_3d7‍.w("./questions",[["promoptForMissingOptions",["promoptForMissingOptions"],function(v){promoptForMissingOptions=v}],["promoptForCMSConfiguration",["promoptForCMSConfiguration"],function(v){promoptForCMSConfiguration=v}],["promoptForMAMPUpdate",["promoptForMAMPUpdate"],function(v){promoptForMAMPUpdate=v}]]);




function parseArgumentsIntoOptions (rawArgs) {
  const args = arg(
    {
      '--git': Boolean,
      '--yes': Boolean,
      '--install': Boolean,
      '-g': '--git',
      '-y': '--yes',
      '-i': '--install'
    }, {
      argv: rawArgs.slice(2),
    }
  )

  return {
    skipPrompts: args['--yes'] || false,
    git: args['--git'] || false,
    template: args._[0],
    runInstall: args['--install'] || true,
  }
}

       async function cli (args) {
  let options = parseArgumentsIntoOptions(args)
  options = await promoptForMissingOptions(options)
  await createTemplate(options)
  options = await promoptForCMSConfiguration(options)
  await createCMS(options)
  options = await promoptForMAMPUpdate(options)
}
